# Example Kubernetes resource template
#
# All variables are replaced at deployment time with environment variables.
#
# The following variables are derived as follows by the pipeline. DO NOT CHANGE:
#
#   - NAMESPACE:    product
#   - SERVICE_NAME: product-component-branch
#   - IMAGE_NAME:   registry-name/hmcts/product-component:branch
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
        env:
          - name: EMAIL_FROM
            value: "sscs@hmcts.net"
          - name: EMAIL_TO
            value: "sscstest@greencroftconsulting.com"
          - name: EMAIL_SUBJECT
            value: "Your appeal"
          - name: EMAIL_MESSAGE
            value: "Your appeal has been created. Please do not respond to this email"
          - name: ROBOTICS_EMAIL_FROM
            value: "sscs@hmcts.net"
          - name: ROBOTICS_EMAIL_TO
            value: "fake"
          - name: ROBOTICS_EMAIL_SUBJECT
            value: "Robotics Data"
          - name: ROBOTICS_EMAIL_MESSAGE
            value: "Please find attached the robotics json file \nPlease do not respond to this email"
          - name: EMAIL_SERVER_HOST
            value: "mta.reform.hmcts.net"
          - name: EMAIL_SERVER_PORT
            value: "25"
          - name: EMAIL_SMTP_TLS_ENABLED
            value: "true"
          - name: EMAIL_SMTP_SSL_TRUST
            value: "*"
          - name: SUBSCRIPTIONS_MAC_SECRET
            value: ${SUBSCRIPTIONS_MAC_SECRET}
          - name: CORE_CASE_DATA_JURISDICTION_ID
            value: "SSCS"
          - name: CORE_CASE_DATA_CASE_TYPE_ID
            value: "Benefit"
          - name: IDAM.S2S-AUTH.TOTP_SECRET
            value: ${IDAM_S2S_AUTH_TOTP_SECRET}
          - name: IDAM.S2S-AUTH.MICROSERVICE
            value: ${IDAM_S2S_AUTH_MICROSERVICE}
          - name: IDAM_SSCS_SYSTEMUPDATE_USER
            value: ${IDAM_SSCS_SYSTEMUPDATE_USER}
          - name: IDAM_SSCS_SYSTEMUPDATE_PASSWORD
            value: ${IDAM_SSCS_SYSTEMUPDATE_PASSWORD}
          - name: IDAM_OAUTH2_CLIENT_ID
            value: "sscs"
          - name: IDAM_OAUTH2_CLIENT_SECRET
            value: ${IDAM_OAUTH2_CLIENT_SECRET}
          - name: MAX_FILE_SIZE
            value: "10MB"
          - name: MAX_REQUEST_SIZE
            value: "10MB"
              envFrom:
              - configMapRef:
                  name: ${SERVICE_NAME}-config

              resources:
                requests:
                  memory: "1024Mi"
                  cpu: "200m"
                limits:
                  memory: "2048Mi"
                  cpu: "2500m"

              readinessProbe:
                timeoutSeconds: 10
                initialDelaySeconds: 30
                periodSeconds: 10
                httpGet:
                  path: /health
                  port: 8080

              # This is the port your process is listening on in the container
              ports:
              - containerPort: 8080
                name: http
              imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: ${SERVICE_NAME}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80