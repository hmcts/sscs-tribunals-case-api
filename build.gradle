buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.34")
    }
}

plugins {
    id 'application'
    id 'pmd'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'uk.gov.hmcts.java' version '0.12.12'
    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id "info.solidsoft.pitest" version '1.7.0'
    id 'org.owasp.dependencycheck' version '7.2.1'
    id 'au.com.dius.pact' version '4.2.14'
    id 'com.github.hmcts.rse-cft-lib' version '0.19.380'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "info.solidsoft.pitest"

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/reform/sscs")
    keys = ['git.commit.id', 'git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}


group = 'uk.gov.hmcts.reform'
version = '1.0.0'

sourceCompatibility = 11
targetCompatibility = 11

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

tasks.withType(Copy).all { duplicatesStrategy 'warn' }

mainClassName = 'uk.gov.hmcts.reform.sscs.TribunalsCaseApiApplication'

pmd {
    toolVersion = "6.5.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/IntegrationTests/java')
        }
        resources {
            srcDir('src/IntegrationTests/resources')
        }
    }
    e2e {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/e2e/java')
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
}

dependencies {
    integrationTestImplementation(sourceSets.test.output)
    e2eImplementation(sourceSets.test.output)
}

task integration(type: Test) {
    setTestClassesDirs(sourceSets.integrationTest.output.classesDirs)
    setClasspath(sourceSets.integrationTest.runtimeClasspath)
}

task functional(type: Test) {
    useJUnitPlatform()
    group = 'Functional Tests'
    description = 'Executes non-destructive functional tests in AAT against a running CCD and notification service'
    setTestClassesDirs(sourceSets.e2e.output.classesDirs)
    setClasspath(sourceSets.e2e.runtimeClasspath)
    include "uk/gov/hmcts/reform/sscs/functional/**"
    exclude "uk/gov/hmcts/reform/sscs/smoke/**"
}



task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
                def regex = /^[0-9,.v-]+(-r)?$/
                return !stableKeyword && !(version ==~ regex)
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 7-10 fails the build, anything lower and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild', 'true') == 'true' ? 7.0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'

    cveValidForHours = 24

    analyzers {
        retirejs {
            enabled = false
        }
        ossIndex {
            enabled = false
        }
    }
}

repositories {

    mavenLocal()
    mavenCentral()

    // jitpack should be last resort
    // see: https://github.com/jitpack/jitpack.io/issues/1939
    maven { url 'https://jitpack.io' }
    // Requires authentication, if it gets here the library cannot be found!
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

processResources.dependsOn(generateGitProperties)

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
check.dependsOn integration
checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)
integration.shouldRunAfter(checkstyleIntegrationTest)
integration.shouldRunAfter(test)

sonarqube {
    properties {
        property "sonar.projectName", "SSCS - Tribunals Case Api"
        property "sonar.projectKey", "SSCSTCA"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**/CreateCaseException.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/sscs/TribunalsCaseApiApplication.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/email/Email.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/config/*," +
                "src/main/java/uk/gov/hmcts/reform/sscs/model/**/*.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/EvidenceUploadService.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/OnlineHearingService.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/data/EvidenceDescriptionPdfData.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/StoreAppellantStatementService.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/StorePdfService.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/servicebus/SessionAwareServiceBusMessagingService.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/coversheet/PdfCoverSheet.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/controllers/CreateCaseController.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/data/PdfData.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/ccd/presubmit/writefinaldecision/esa/EsaWriteFinalDecisionMidEventValidationHandler.java," +
                "src/main/java/uk/gov/hmcts/reform/sscs/ccd/presubmit/writefinaldecision/uc/UcWriteFinalDecisionMidEventValidationHandler.java"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    e2eImplementation.extendsFrom(testImplementation)
    e2eRuntimeOnly.extendsFrom(testRuntimeOnly)
    contractTestImplementation.extendsFrom(testImplementation)
    contractTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

ext["rest-assured.version"] = '4.2.0'

dependencyManagement {
    dependencies {
        dependency group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
        dependency group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
        dependency group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.17.2'

        // resolves: CVE-2020-28052
        dependency group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.69'
        //CVE-2021-40690
        dependency group: 'org.apache.santuario', name: 'xmlsec', version: '2.3.0'

        // resolves: CVE-2019-10101, CVE-2019-10102, CVE-2019-10103, CVE-2020-15824
        dependencySet(group: 'org.jetbrains.kotlin', version: '1.6.10') {
            entry 'kotlin-stdlib'
            entry 'kotlin-stdlib-common'
            entry 'kotlin-stdlib-jdk8'
            entry 'kotlin-stdlib-jdk7'
            entry 'kotlin-reflect'
        }
        // CVE-2020-13934, CVE-2020-13935, CVE-2020-17527, CVE-2020-17527,
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.65') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-el'
            entry 'tomcat-annotations-api'
            entry 'tomcat-embed-websocket'
        }

        // CVE-2020-17521
        dependencySet(group: 'org.codehaus.groovy', version: '3.0.9') {
            entry 'groovy'
            entry 'groovy-json'
            entry 'groovy-xml'
        }

        //CVE-2021-22112 CVE-2022-22978, CVE-2022-22976
        dependencySet(group: 'org.springframework.security', version: '5.4.10') {
            entry 'spring-security-crypto'
            entry 'spring-security-config'
            entry 'spring-security-core'
            entry 'spring-security-web'
        }

        dependencySet(group: 'org.apache.xmlgraphics', version: '1.14') {
            entry 'batik-all'
        }

        //CVE-2021-22118
        dependencySet(group: 'org.springframework', version: '5.2.22.RELEASE') {
            entry 'spring-aop'
            entry 'spring-aspects'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-context-support'
            entry 'spring-core'
            entry 'spring-expression'
            entry 'spring-jcl'
            entry 'spring-jdbc'
            entry 'spring-orm'
            entry 'spring-tx'
            entry 'spring-web'
            entry 'spring-webmvc'
        }

        dependencySet(group: 'io.netty', version: '4.1.79.Final') {
            entry 'netty-handler'
            entry 'netty-transport-native-epoll'
            entry 'netty-transport-native-kqueue'
            entry 'netty-codec-http'
            entry 'netty-codec-http2'
            entry 'netty-codec-socks'
            entry 'netty-handler-proxy'
            entry 'netty-codec'
            entry 'netty-codec-dns'
            entry 'netty-transport-native-unix-common'
            entry 'netty-transport'
            entry 'netty-buffer'
            entry 'netty-resolver'
            entry 'netty-resolver-dns'
            entry 'netty-resolver-dns-native-macos'
            entry 'netty-common'
        }

        //CVE-2021-27568
        dependencySet(group: 'net.minidev', version: '2.4.7') {
            entry 'json-smart'
            entry 'accessors-smart'
        }

        //CVE-2021-30468
        dependencySet(group: 'org.apache.cxf', version: '3.4.5') {
            entry 'cxf-core'
            entry 'cxf-rt-frontend-jaxrs'
            entry 'cxf-rt-rs-client'
            entry 'cxf-rt-security'
            entry 'cxf-rt-transports-http'
        }

        //CVE-2021-35515, CVE-2021-35516, CVE-2021-35517, CVE-2021-36090
        dependencySet(group: 'org.apache.commons', version: '1.21') {
            entry 'commons-compress'
        }

        //CVE-2022-25857
        dependencySet(group: 'org.yaml', version: '1.33') {
            entry 'snakeyaml'
        }

        //CVE-2021-42550
        dependencySet(group: 'ch.qos.logback', version: '1.2.11') {
            entry 'logback-core'
            entry 'logback-classic'
        }

        //CVE-2020-36518, CVE-2022-42003, CVE-2022-42004
        dependencySet(group: 'com.fasterxml.jackson.core', version: '2.13.4') {
            entry 'jackson-databind'
            entry 'jackson-core'
            entry 'jackson-annotations'
        }

        //CVE-2020-36518, CVE-2022-42003, CVE-2022-42004
        dependencySet(group: 'com.fasterxml.jackson.datatype', version: '2.13.4') {
            entry 'jackson-datatype-jsr310'
            entry 'jackson-datatype-jdk8'
        }

        //CVE-2020-36518, CVE-2022-42003, CVE-2022-42004
        dependencySet(group: 'com.fasterxml.jackson.dataformat', version: '2.13.4') {
            entry 'jackson-dataformat-cbor'
            entry 'jackson-dataformat-yaml'
            entry 'jackson-dataformat-xml'
            entry 'jackson-dataformat-smile'
        }


        dependency group: 'commons-io', name: 'commons-io', version: '2.11.0'

        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR12"
        }
    }
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.1'
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.16.3'

    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.0.3'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.1.1'
    implementation group: 'com.github.hmcts', name: 'ccd-client', version: '4.8.6'

    implementation group: 'net.objectlab.kit', name: 'datecalc-jdk8', version: '1.4.4'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.7'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.2'

    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '2.1.5'
    implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: '0.1.0'
    implementation group: 'com.github.hmcts', name: 'java-logging', version: '5.1.9'
    implementation group: 'com.github.hmcts', name: 'doc-assembly-client', version: '1.07'
    implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: '1.7.2'
    //remove when secure doc store is live
    implementation group: 'com.github.hmcts', name: 'document-management-client', version: '7.0.0'
    implementation group: 'com.github.hmcts', name: 'cmc-pdf-service-client', version: '7.0.1'

    implementation group: 'com.github.hmcts', name: 'sscs-common', version: '4.20.2'
    implementation group: 'com.github.hmcts', name: 'sscs-pdf-email-common', version: '1.5.0'

    implementation group: 'com.azure', name: 'azure-core', version: '1.27.0'
    implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.6.0'

    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.4.15'

    implementation group:'org.overviewproject', name: 'mime-types', version: '1.0.2'

    implementation group:'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    implementation group: 'org.pitest', name: 'pitest', version:  '1.4.2'
    implementation group:'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.3.0'
    implementation group:'org.codehaus.sonar-plugins', name:'sonar-pitest-plugin', version: '0.5'

    testImplementation group: 'io.rest-assured', name: 'rest-assured'
    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.2.2', classifier: 'all', {
        exclude group: 'commons-io', module: 'commons-io'
    }

    implementation group: 'commons-io', name: 'commons-io', version:  '2.11.0'

    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
    implementation group: 'org.apache.pdfbox', name: 'xmpbox', version: '2.0.25'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.25'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.4.1'
    implementation group: 'org.apache.tika', name: 'tika-parsers', version: '2.4.1'

    implementation group: 'org.json', name: 'json', version: '20220924'

    implementation group: 'com.opencsv', name: 'opencsv', version: '5.6'

    implementation group: "com.networknt", name: "json-schema-validator", version: "1.0.58"

    integrationTestImplementation group: 'commons-io', name: 'commons-io', version:  '2.11.0'

    e2eImplementation group: 'commons-io', name: 'commons-io', version:  '2.11.0'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    testImplementation group: 'com.azure', name: 'azure-core', version: '1.27.0'
    testImplementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.6.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.0.0'
    testImplementation group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '2.28.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.0.0'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
    testImplementation group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: '2.28.0'
    testImplementation group: 'io.github.artsok', name: 'rerunner-jupiter', version: '2.1.6'

    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'

    testImplementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    e2eImplementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    e2eAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.21.0'

    e2eRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.8.2'

    //pact contract testing
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.1.7'
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: '4.1.7'

    contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.1.7'
    contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'java8',  version: '4.1.7'

    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'

    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    contractTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.9.1'

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    cftlibImplementation group: 'org.springframework.boot', name: 'spring-boot-devtools'
    cftlibAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

}
// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

bootJar {
    archiveName 'tribunals-case-api.jar'
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.sscs.service.*']
    excludedClasses = ['uk.gov.hmcts.reform.sscs.config.*',
                       'uk.gov.hmcts.reform.sscs.builder.*',
                       'uk.gov.hmcts.reform.sscs.domain.*',
                       'uk.gov.hmcts.reform.sscs.exception.*',
                       'uk.gov.hmcts.reform.sscs.healthcheck.*',
                       'uk.gov.hmcts.reform.sscs.model.*',
                       'uk.gov.hmcts.reform.sscs.transform.*',
                       'uk.gov.hmcts.reform.sscs.TribunalsCaseApiApplication']
    excludedMethods = ['equals', 'hashcode']
    jvmArgs = ['-Xms1G','-Xmx3G']
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    threads = 20
    verbose = true
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
}

task smoke(type: Test) {
    group = 'verification'
    description = 'Executes non-destructive smoke tests against a running Tribual Case API'
    setTestClassesDirs(sourceSets.e2e.output.classesDirs)
    setClasspath(sourceSets.e2e.runtimeClasspath)
    include "uk/gov/hmcts/reform/sscs/smoke/**"
    exclude "uk/gov/hmcts/reform/sscs/functional/**"
}

task contract(type: Test, description: 'Runs the pact contract tests.', group: 'Verification') {
    description = "Runs the consumer Pact tests"
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}



project.ext {
    pacticipant = 'sscs_tribunalsCaseApi'
    pacticipantVersion = getCheckedOutGitCommitHash()
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task getSscsCommonVersion{
    doLast {
        print '4.18.0'
    }
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

pact {
    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
    }
    publish {
        pactDirectory = 'pacts'
        tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
        version = project.pacticipantVersion
    }
}


static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

apply plugin: 'org.springframework.boot'
run {
    def debug = System.getProperty("debug")
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006']
    }
}


task generateXls(type: Exec) {
    commandLine project.file('../sscs-ccd-definitions/bin/create-xlsx.sh').path, 'benefit', 'dev', 'local'
    inputs.dir project.file('../sscs-ccd-definitions/benefit')
    outputs.dir project.file('../sscs-ccd-definitions/releases')
    environment "TRIBUNALS_API_URL", "http://localhost:8080"
    workingDir project.file('../sscs-ccd-definitions').path
}

bootWithCCD {
    dependsOn generateXls
    authMode = uk.gov.hmcts.rse.AuthMode.Local

    //---Debug-----
    //Uncomment to launch with debug
    //jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006']

    //---Extra ccd loging----
    //Uncomment for ccd callback logging
    //environment 'LOG_CALLBACK_DETAILS', '*'

    //---Additional compose services---
    //Place any extra compose files you'd like to be started automatically here. These should be
    //in the folder /src/cftlib/resources/docker/ and comma delimited.
    environment 'ADDITIONAL_COMPOSE_FILES', 'cft-lib-doc-stack.yml,cft-lib-doc-assembly.yml,cft-lib-ref-data-wiremock.yml'
    //Turn this on to automatically recreate containers above. Useful for debugging if you make changes.
    environment 'FORCE_RECREATE_ADDITIONAL_CONTAINERS', 'false'

    environment 'XUI_PORT', '3455'
    environment 'RSE_LIB_S2S_PORT', '4502'
    //URLs for services running in Docker require host.docker.internal to resolve properly
    environment 'XUI_DOCUMENTS_API', 'http://host.docker.internal:5005'
    environment 'XUI_DOCUMENTS_API_V2', 'http://host.docker.internal:4455'
    environment 'IDAM_SIMULATOR_BASE_URL', 'http://rse-idam-simulator:5000'
    //URLs for other services can resolve localhost
    environment 'DM_STORE_BASE_URL', 'http://localhost:5005'
    environment 'S2S_URL', 'http://localhost:4502'
    environment 'DOC_ASSEMBLY_URL', 'http://localhost:4631'
    environment 'RSE_LIB_ADDITIONAL_DATABASES', 'evidence'
    environment 'CCD_DOCUMENT_URL_PATTERN', '.*'
    environment 'CASE_DOCUMENT_S2S_AUTHORISED_SERVICES', 'ccd_case_document_am_api,ccd_gw,xui_webapp,ccd_data,bulk_scan_processor,sscs'
    environment 'DATA_STORE_S2S_AUTHORISED_SERVICES', 'ccd_gw,ccd_data,ccd_ps,payment-api,xui_webapp,sscs,ccd_case_document_am_api,am_role_assignment_service'
    environment 'CASE_ACCESS_MANAGEMENT_FEATURE', 'true'
    //Wiremock
    environment 'RD_LOCATION_REF_API_URL', 'http://localhost:8084'
}
