var c=Object.defineProperty,y=Object.defineProperties,F=Object.getOwnPropertyDescriptor,d=Object.getOwnPropertyDescriptors,k=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols;var h=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable;var b=(t,r,a)=>r in t?c(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a,u=(t,r)=>{for(var a in r||(r={}))h.call(r,a)&&b(t,a,r[a]);if(f)for(var a of f(r))$.call(r,a)&&b(t,a,r[a]);return t},g=(t,r)=>y(t,d(r));var x=(t,r)=>{for(var a in r)c(t,a,{get:r[a],enumerable:!0})},w=(t,r,a,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of k(r))!h.call(t,o)&&o!==a&&c(t,o,{get:()=>r[o],enumerable:!(e=F(r,o))||e.enumerable});return t};var A=t=>w(c({},"__esModule",{value:!0}),t);var E={};x(E,{CSS_FUNCTIONS:()=>C,CSS_SPACES:()=>S,Color:()=>l});module.exports=A(E);const S=["sRGB","display-p3","rec2020","a98-rgb","prophoto-rgb","rec2020"],C=["rgb","rgba","hsl","hsla","hwb","cmyk","lab","lch","color"];function N(t,r){switch(r==null?void 0:r.casing){case"upper":t=t.toUpperCase();break;case"lower":t=t.toLowerCase();break}return r!=null&&r.prefix&&(t=r.prefix+t),t}function p(t){return t.map(a=>{if(a%1!==0){const o=new ArrayBuffer(4);new DataView(o).setFloat32(0,a);const i=new Uint8Array(o);return p(Array.from(i)).split(" ").join("")}return(a>>>0).toString(2).padStart(8,"0")}).join(" ")}function B(t,r="rgb",a="sRGB"){const e=o=>Math.round(o*100);switch(r){case"rgba":return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`;case"color":return`color(${a} ${t[0]} ${t[1]} ${t[2]})`;case"cmyk":return`cmyk(${e(t[0])}%, ${e(t[1])}%, ${e(t[2])}%, ${e(t[3])}%)`;case"hsl":return`hsl(${t[0]}deg ${e(t[1])}% ${e(t[2])}%)`;case"hsla":return`hsl(${t[0]}deg ${e(t[1])}% ${e(t[2])}% / ${e(t[3])})`;case"hwb":return`hwb(${t[0]} ${e(t[1])}% ${e(t[2])}%)`;case"lab":return`lab(${e(t[0])}% ${t[1]} ${t[2]})`;case"lch":return`lch(${e(t[0])}% ${t[1]} ${t[2]})`;case"rgb":default:return`rgb(${t[0]}, ${t[1]}, ${t[2]})`}}function m(t,r,a="rgb",e="sRGB"){switch(r){case"css":return B(t,a,e);case"binary":return p(t);default:return t}}class l{constructor(r){this.faker=r;for(const a of Object.getOwnPropertyNames(l.prototype))a==="constructor"||typeof this[a]!="function"||(this[a]=this[a].bind(this))}human(){return this.faker.helpers.arrayElement(this.faker.definitions.color.human)}space(){return this.faker.helpers.arrayElement(this.faker.definitions.color.space)}cssSupportedFunction(){return this.faker.helpers.arrayElement(C)}cssSupportedSpace(){return this.faker.helpers.arrayElement(S)}rgb(r){const{format:a="hex",includeAlpha:e=!1,prefix:o="#",casing:i="lower"}=r||{};r={format:a,includeAlpha:e,prefix:o,casing:i};let n,s="rgb";return a==="hex"?(n=this.faker.datatype.hexadecimal(e?8:6).slice(2),n=N(n,r),n):(n=Array.from({length:3}).map(()=>this.faker.datatype.number({min:0,max:255})),e&&(n.push(this.faker.datatype.float({min:0,max:1,precision:.01})),s="rgba"),m(n,a,s))}cmyk(r){const a=Array.from({length:4}).map(()=>this.faker.datatype.float({min:0,max:1,precision:.01}));return m(a,(r==null?void 0:r.format)||"decimal","cmyk")}hsl(r){const a=[this.faker.datatype.number({min:0,max:360})];for(let e=0;e<(r!=null&&r.includeAlpha?3:2);e++)a.push(this.faker.datatype.float({min:0,max:1,precision:.01}));return m(a,(r==null?void 0:r.format)||"decimal",r!=null&&r.includeAlpha?"hsla":"hsl")}hwb(r){const a=[this.faker.datatype.number({min:0,max:360})];for(let e=0;e<2;e++)a.push(this.faker.datatype.float({min:0,max:1,precision:.01}));return m(a,(r==null?void 0:r.format)||"decimal","hwb")}lab(r){const a=[this.faker.datatype.float({min:0,max:1,precision:1e-6})];for(let e=0;e<2;e++)a.push(this.faker.datatype.float({min:-100,max:100,precision:1e-4}));return m(a,(r==null?void 0:r.format)||"decimal","lab")}lch(r){const a=[this.faker.datatype.float({min:0,max:1,precision:1e-6})];for(let e=0;e<2;e++)a.push(this.faker.datatype.number({min:0,max:230,precision:.1}));return m(a,(r==null?void 0:r.format)||"decimal","lch")}colorByCSSColorSpace(r){(r==null?void 0:r.format)==="css"&&!(r!=null&&r.space)&&(r=g(u({},r),{space:"sRGB"}));const a=Array.from({length:3}).map(()=>this.faker.datatype.float({min:0,max:1,precision:1e-4}));return m(a,(r==null?void 0:r.format)||"decimal","color",r==null?void 0:r.space)}}0&&(module.exports={CSS_FUNCTIONS,CSS_SPACES,Color});
