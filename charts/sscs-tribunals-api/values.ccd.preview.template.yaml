#Pull request needs to have the pr-values:ccd label to deploy this stack.
tags:
  sscs-ccd-idam-pr: true

java:
  image: ${IMAGE_NAME}
  memoryLimits: "8Gi"
  memoryRequests: "1Gi"
  cpuRequests: "2"
  cpuLimits: 2000m
  readinessDelay: 45
  environment:
    PDF_API_URL: "http://rpe-pdf-service-aat.service.core-compute-aat.internal"
    CORE_CASE_DATA_API_URL: ${CORE_CASE_DATA_API_URL}
    DOCUMENT_MANAGEMENT_URL: "http://dm-store-aat.service.core-compute-aat.internal"
    BUNDLE_URL: http://${SERVICE_NAME}-em-ccdorc
    CCD_UI_BASE_URL: https://${SERVICE_NAME}-case-management-web
    IDAM_S2S_AUTH: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
    IDAM_OAUTH2_REDIRECT_URL: ${IDAM_OAUTH2_REDIRECT_URL}
    IDAM_API_JWK_URL: https://idam-api.aat.platform.hmcts.net/jwks
    MANAGE_CASE_UI_BASE_URL: https://${SERVICE_NAME}-xui
    IDAM_OAUTH2_CLIENT_ID: ${IDAM_OAUTH2_CLIENT_ID}
    IDAM_OAUTH2_CLIENT_SECRET: ${IDAM_OAUTH2_CLIENT_SECRET}
    IDAM_S2S-AUTH_TOTP_SECRET: ${IDAM_S2S_AUTH_TOTP_SECRET}
    IDAM_S2S-AUTH_MICROSERVICE: ${IDAM_S2S_AUTH_MICROSERVICE}
    IDAM_SSCS_SYSTEMUPDATE_USER: ${IDAM_SSCS_SYSTEMUPDATE_USER}
    IDAM_SSCS_SYSTEMUPDATE_PASSWORD: ${IDAM_SSCS_SYSTEMUPDATE_PASSWORD}
    CORE_CASE_DATA_JURISDICTION_ID: SSCS
    CORE_CASE_DATA_CASE_TYPE_ID: ${CASE_TYPE}
    TEST_URL: http://${SERVICE_NAME}
    CREATE_CCD_ENDPOINT: true
    CASE_ACCESS_MANAGEMENT_FEATURE: true
    WORK_ALLOCATION_FEATURE: true
    SCHEDULE_LISTING_FEATURE: true
    POST_HEARINGS_FEATURE: true
    POST_HEARINGS_B_FEATURE: true
    ADJOURNMENT_FEATURE: true
    GAPS_SWITCHOVER_FEATURE: true
    ELASTIC_SEARCH_FEATURE: true
    ELINKS_V2_FEATURE_ENABLED: true
    DELETED_REDACTED_DOC_ENABLED: true
    DUMMY: true
    CITIZEN_LOGIN_SERVICE_V2: true
    ADD_LINK_TO_OTHER_ASSOCIATED_CASES_V2: true
    TOPIC_NAME: "${SERVICE_NAME}-servicebus-main-topic"
    SUBSCRIPTION_NAME: "${SERVICE_NAME}-servicebus-main-topic"
    AMQP_HOST: "sscs-sb-preview.servicebus.windows.net"
    AMQP_USERNAME: "RootManageSharedAccessKey"
    HEARINGS_EVENT_QUEUE_NAME: ${SERVICE_NAME}-servicebus-tribunals-to-hearing-api
  secrets:
    HEARINGS_EVENT_SERVICE_BUS_CONNECTION_STRING:
      secretRef: sscs-sb-preview
      key: connectionString
    AMQP_PASSWORD:
      secretRef: sscs-sb-preview
      key: primaryKey
  postgresql:
    enabled: true
    primary:
      persistence:
        enabled: false
      initdb:
        scripts:
          init.sql: |
            CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "annotation" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "role_assignment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "hmc-cft-hearing-service" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "sscsjobscheduler" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    auth:
      username: "hmcts"
      password: "hmcts"


idam-pr:
  releaseNameOverride: ${SERVICE_NAME}-idam-pr
  enabled: true
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
    CCD Admin:
      - http://${SERVICE_NAME}-ccd-admin-web/oauth2redirect
    CCD:
      - https://${SERVICE_NAME}-case-management-web/oauth2redirect
    ccd_data_store_api:
      - http://${SERVICE_NAME}-ccd-data-store-api/oauth2redirect

em-ccdorc:
  enabled: true
  java:
    image: hmctspublic.azurecr.io/em/ccdorc:latest
    releaseNameOverride: ${SERVICE_NAME}-em-ccdorc
    ingressHost: em-ccdorc-${SERVICE_FQDN}
    environment:
      IDAM_API_BASE_URI: https://idam-api.aat.platform.hmcts.net
      OPEN_ID_API_BASE_URI: https://idam-web-public.aat.platform.hmcts.net/o
      S2S_BASE_URI: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      EM_STITCHING_API_URL: http://em-stitching-aat.service.core-compute-aat.internal
      DM_STORE_APP_URL: http://dm-store-aat.service.core-compute-aat.internal
      CCD_DATA_API_URL: ${CORE_CASE_DATA_API_URL}
      CALLBACK_HTTP_SCHEME: https
      CALLBACK_DOMAIN: em-ccdorc-${SERVICE_FQDN}

ccd-case-document-am-api:
  enabled: true
  java:
    image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
    releaseNameOverride: ${SERVICE_NAME}-ccd-case-document-am-api
    environment:
      CCD_DATA_STORE_API_BASE_URL: ${CORE_CASE_DATA_API_URL}
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      DM_STORE_BASE_URL: http://dm-store-aat.service.core-compute-aat.internal

xui-webapp:
  enabled: true
  nodejs:
    memoryLimits: "4Gi"
    cpuLimits: 2000m
    memoryRequests: "1Gi"
    cpuRequests: "1"
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    environment:
      HEALTH_CCD_COMPONENT_API: ${CCD_GW_API}/health
      HEALTH_CCD_DATA_API: ${CORE_CASE_DATA_API_URL}/health
      HEALTH_TERMS_AND_CONDITIONS_API: http://${SERVICE_NAME}-xui-terms-and-conditions/health
      SERVICES_EM_ANNO_API: ${CCD_GW_API}
      SERVICES_CCD_COMPONENT_API: ${CCD_GW_API}
      SERVICES_CCD_DATA_STORE_API: ${CORE_CASE_DATA_API_URL}
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://${SERVICE_NAME}-aac
      SERVICES_TERMS_AND_CONDITIONS: http://${SERVICE_NAME}-xui-terms-and-conditions
      SERVICES_IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      SERVICES_S2S: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      SERVICES_HEARINGS_COMPONENT_API: http://jurisdiction-hearings-api-aat.service.core-compute-aat.internal
      SERVICES_HEARINGS_COMPONENT_API_SSCS: http://${SERVICE_NAME}-sscs-hearings-api
      SERVICES_PRD_LOCATION_API: http://rd-location-ref-api-aat.service.core-compute-aat.internal
      SERVICES_PRD_JUDICIAL_API: http://rd-judicial-api-aat.service.core-compute-aat.internal
      SERVICES_PRD_COMMONDATA_API: http://rd-commondata-api-aat.service.core-compute-aat.internal
      SERVICES_DOCUMENTS_API_V2: http://${SERVICE_NAME}-ccd-case-document-am-api
      GLOBAL_SEARCH_SERVICES: IA,CIVIL,PRIVATELAW,PUBLICLAW,SSCS
      JURISDICTIONS: SSCS
      LAUNCH_DARKLY_CLIENT_ID: 5de6610b23ce5408280f2268
      FEATURE_REDIS_ENABLED: false
      FEATURE_APP_INSIGHTS_ENABLED: false
      FEATURE_SECURE_COOKIE_ENABLED: false
      FEATURE_PROXY_ENABLED: false
      FEATURE_TERMS_AND_CONDITIONS_ENABLED: false
      FEATURE_HELMET_ENABLED: false
      FEATURE_OIDC_ENABLED: false
      ALLOW_CONFIG_MUTATIONS: true
      FEATURE_JRD_E_LINKS_V2_ENABLED: true
      NOW: false
      REDISCLOUD_URL: http://dummyrediscloudurl
      UV_THREADPOOL_SIZE: 128
      PROTOCOL: http
    keyVaults:
      rpx:
        resourceGroup: rpx
        secrets:
          - mc-s2s-client-secret
          - mc-idam-client-secret
          - system-user-name
          - system-user-password


ccd:
  enabled: ${PREVIEW_CCD_ENABLED}
  ccd:
    adminWeb:
      enabled: ${PREVIEW_CCD_ENABLED}
    definitionImporter:
      enabled: ${PREVIEW_CCD_ENABLED}
    userProfileImporter:
      enabled: ${PREVIEW_CCD_ENABLED}
    apiGatewayWeb:
      enabled: ${PREVIEW_CCD_ENABLED}
    postgresql:
      enabled: false
    s2s:
      enabled: false
    elastic:
      enabled: ${PREVIEW_CCD_ENABLED}

  global:
    ccdApiGatewayIngress: ${SERVICE_NAME}-ccd-api-gw
    ccdAdminWebIngress: ${SERVICE_NAME}-ccd-admin-web
    ccdDataStoreUrl: http://${SERVICE_NAME}-ccd-data-store-api
    ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
    ccdUserProfileUrl: http://${SERVICE_NAME}-ccd-user-profile-api
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    enableKeyVaults: true
    devMode: true
    postgresql:
      auth:
        postgresUsername: hmcts
        postgresPassword: "${postgresPassword:hmcts}"

  am-role-assignment-service:
    java:
      image: 'hmctspublic.azurecr.io/am/role-assignment-service:latest'
      imagePullPolicy: Always
      ingressHost: ""
      releaseNameOverride: ${SERVICE_NAME}-am-role-assignment-service
      readinessDelay: 240
      livenessDelay: 240
      environment:
        ROLE_ASSIGNMENT_DB_HOST: ${SERVICE_NAME}-postgresql
        ROLE_ASSIGNMENT_DB_NAME: "role_assignment"
        ROLE_ASSIGNMENT_DB_OPTIONS: "?stringtype=unspecified&ssl=disable&gssEncMode=disable"
        AM_ROLE_ASSIGNMENT_SERVICE_SECRET: AAAAAAAAAAAAAAAA
        IDAM_USER_URL: "https://idam-web-public.aat.platform.hmcts.net"
        IDAM_S2S_URL: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
        OPEN_ID_API_BASE_URI: "https://idam-web-public.{{ .Values.global.environment }}.platform.hmcts.net/o"
        ROLE_ASSIGNMENT_IDAM_ADMIN_USERID: ras-validation-system@hmcts.net
        SPRING_CLOUD_PROPERTIESVOLUME_PATHS: "/mnt/secrets/am,/mnt/secrets/sscs"
        APPLICATION_LOGGING_LEVEL: INFO
        BYPASS_ORG_DROOL_RULE: true
        LAUNCH_DARKLY_ENV: pr
        ENABLE_DB_MIGRATE: true
      keyVaults:
        sscs:
          secrets:
            - name: preview-ccd-db-username
              alias: ROLE_ASSIGNMENT_DB_USERNAME
            - name: preview-ccd-db-password
              alias: ROLE_ASSIGNMENT_DB_PASSWORD
      secrets:
        LD_SDK_KEY:
          secretRef: role-assignment-service-LD-SDK-KEY
          key: key
          disabled: true
        ROLE_ASSIGNMENT_IDAM_CLIENT_SECRET:
          secretRef: role-assignment-service-IDAM-CLIENT-SECRET
          key: key
          disabled: true
        ROLE_ASSIGNMENT_IDAM_ADMIN_PASSWORD:
          secretRef: role-assignment-service-IDAM-ADMIN-SECRET
          key: key
          disabled: true
  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1

  logstash:
    image: hmctspublic.azurecr.io/imported/logstash/logstash
    imageTag: "7.16.1"
    imagePullPolicy: "IfNotPresent"
    logstashJavaOpts: -Xmx1g -Xms512M
    persistence:
      enabled: false
    extraEnvs:
      - name: DATA_STORE_PASS
        value: hmcts
      - name: DATA_STORE_URL
        value: "jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified"
      - name: DATA_STORE_USER
        value: hmcts
      - name: ES_HOSTS
        value: "${SERVICE_NAME}-es-master"
    extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.3.3.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
    extraVolumes: |
      - name: logstash-lib
        emptyDir: {}
    extraVolumeMounts: |
      - name: logstash-lib
        mountPath: /usr/share/logstash/ccd
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: false
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          pipeline.workers: 4
          pipeline.batch.size: 500
          queue.type: persisted
    logstashPipeline:
      01_input.conf: |
        input  {
          jdbc {
            jdbc_connection_string => "jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified"
            jdbc_user => "hmcts"
            jdbc_password => "hmcts"
            jdbc_validate_connection => true
            jdbc_validation_timeout => "1"
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
            clean_run => false
            schedule => "* * * * * *"
          }
        }
      02_filter.conf: |
        filter{
          json{
              source => "json_data"
              target => "data"
              remove_field => ["json_data"]
              }

              json{
                  source => "json_supplementary_data"
                  target => "supplementary_data"
                  remove_field => ["json_supplementary_data"]
              }

              json{
                  source => "json_data_classification"
                  target => "data_classification"
                  remove_field => ["json_data_classification"]
              }

              if [data][SearchCriteria] {
                  clone {
                      clones => ["SearchCriteria"]
                  }
              }

              if [type] == "SearchCriteria" {
                  if [data][SearchCriteria] {
                      mutate {
                        rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                      }
                  }
                  if [data][caseManagementLocation] {
                      mutate {
                        rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                      }
                  }
                  if [data][CaseAccessCategory] {
                    mutate {
                        rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                    }
                  }
                  if [data][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data][caseManagementCategory] {
                      mutate {
                        rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                      }
                  }
                  if [supplementary_data][HMCTSServiceId] {
                      mutate {
                        rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                      }
                  }
                  if [data_classification][SearchCriteria] {
                      mutate {
                        rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                      }
                  }
                  if [data_classification][CaseAccessCategory] {
                    mutate {
                          rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                    }
                  }
                  if [data_classification][caseManagementLocation] {
                    mutate {
                        rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                    }
                  }
                  if [data_classification][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                      }
                  }

                  if [data_classification][caseManagementCategory] {
                      mutate {
                        rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                      }
                  }
                  mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }

                  mutate {
                          rename => { "[data_new]" => "data" }
                          rename => { "[supplementary_data_new]"  => "supplementary_data" }
                          rename => { "[data_classification_new]"  => "data_classification" }
                  }

                  mutate {
                    add_field => { "index_id" => "global_search" }
                  }
                  mutate {
                    lowercase => [ "index_id" ]
                  }
              } else {
                  mutate {
                      add_field => { "index_id" => "%{case_type_id}_cases" }
                }
              mutate {
                lowercase => [ "index_id" ]
              }
              }
        }
      03_output.conf: |
        output {
            elasticsearch {
                hosts => ["${SERVICE_NAME}-es-master"]
                sniffing => false
                index => "%{[index_id]}"
                document_type => "_doc"
                document_id => "%{id}"
                timeout => 60
            }
        }

  ccd-admin-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      environment:
        ADMINWEB_GLOBAL_SEARCH_INDEX_URL: http://${SERVICE_NAME}-ccd-definition-store/elastic-support/global-search/index
        ADMINWEB_ELASTIC_CASE_TYPES_URL: http://${SERVICE_NAME}-ccd-definition-store/elastic-support/case-types
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}
        ALLOW_CONFIG_MUTATIONS: true
      keyVaults: [ ]


  ccd-user-profile-api:
    java:
      image: hmctspublic.azurecr.io/ccd/user-profile-api:latest
      imagePullPolicy: Always
      enviroment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
        USER_PROFILE_HOST: http://${SERVICE_NAME}-ccd-user-profile-api
        USER_PROFILE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_definition,ccd_admin,sscs
      keyVaults: [ ]

  ccd-definition-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
      imagePullPolicy: Always
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${CCD_DEFINITION_STORE_S2S_SECRET}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,sscs,sscs_bulkscan,em_ccd_orchestrator,ccd_case_document_am_api
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/hmcts
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
        ELASTIC_SEARCH_FAIL_ON_IMPORT: false
        USER_PROFILE_HOST: http://${SERVICE_NAME}-ccd-user-profile-api
      keyVaults: [ ]

  ccd-data-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/data-store-api:latest
      imagePullPolicy: Always
      memoryRequests: '1524Mi'
      cpuRequests: '900m'
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${CCD_DATA_STORE_S2S_SECRET}
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,sscs,sscs_bulkscan,em_ccd_orchestrator
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,sscs,sscs_bulkscan,em_ccd_orchestrator
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        HTTP_CLIENT_READ_TIMEOUT: '120000'
        HTTP_CLIENT_MAX_TOTAL: '300'
        HTTP_CLIENT_MAX_CLIENT_PER_ROUTE: '30'
        DATA_STORE_DB_MAX_POOL_SIZE: 80
        CCD_DOCUMENT_URL_PATTERN: 'http://dm-store.*'
        CASE_DOCUMENT_AM_URL: http://${SERVICE_NAME}-ccd-case-document-am-api
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified&ssl=disable&gssEncMode=disable"
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        ROLE_ASSIGNMENT_URL: "http://am-role-assignment-service-aat.service.core-compute-aat.internal"
      keyVaults: [ ]
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
      autoscaling:
        enabled: false

  ccd-api-gateway-web:
    nodejs:
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_SECRET}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_IDAM_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
        ALLOW_CONFIG_MUTATIONS: true
      ingressIP: ${INGRESS_IP}
      ingressHost: gateway-${SERVICE_FQDN}
      disableKeyVaults: true

  ccd-user-profile-importer:
    image: hmctspublic.azurecr.io/ccd/user-profile-importer:db2r9a
    environment:
      AUTH_PROVIDER_BASE_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      CCD_USER_PROFILE_URL: http://${SERVICE_NAME}-ccd-user-profile-api
    users:
      - system.update@hmcts.net|SSCS|Benefit|appealCreated
      - sscs.superuser@mailinator.com|SSCS|Benefit|appealCreated
      - sscs-citizen2@hmcts.net|SSCS|Benefit|appealCreated

  #Use this image to import your CCD definition. To have an image available, create a git tag and push it.
  ccd-definition-importer:
    image: hmctspublic.azurecr.io/sscs/ccd-definition-importer-benefit:6.3.17nonProd
    definitionFilename: sscs-ccd.xlsx
    redirectUri: http://${SERVICE_NAME}-ccd-admin-web/oauth2redirect
    environment:
      CCD_ENVIRONMENT: 'PROD'
      CCD_DEF_EM_CCD_ORCHESTRATOR_URL: http://${SERVICE_NAME}-em-ccd-orchestrator
      CCD_DEF_TRIBUNALS_API_URL: http://${SERVICE_NAME}-java
      CCD_DEF_TYA_NOTIFICATIONS_API_URL: http://${SERVICE_NAME}-tya-notification
      CCD_DEF_BULK_SCAN_API_URL: http://${SERVICE_NAME}-bulk-scan-api
      CCD_DEF_BULK_SCAN_ORCHESTRATOR_URL: http://${SERVICE_NAME}-bulk-scan-orchestrator
      CCD_DEF_COR_BACKEND_URL: http://${SERVICE_NAME}-ccd-definition-store
      CCD_STORE_BASE_URL: http://${SERVICE_NAME}-ccd-definition-store
      CCD_DEF_TYA_LINK: http://${SERVICE_NAME}-ccd-definition-store
      CCD_DEF_TYA_APPOINTEE_LINK: http://${SERVICE_NAME}-ccd-definition-store
      CCD_DEF_MYA_LINK: http://${SERVICE_NAME}/sign-in?tya=
      CCD_DEF_MYA_REPRESENTATIVE_LINK: http://${SERVICE_NAME}-ccd-definition-store
      CCD_DEF_MYA_APPOINTEE_LINK: http://${SERVICE_NAME}-ccd-definition-store
      CCD_DEF_ENV: 'PROD'
      CCD_DEF_VERSION: 6.3.17nonProd
    secrets: []
    userRoles:
      - citizen
      - caseworker
      - caseworker-sscs
      - caseworker-sscs-systemupdate
      - caseworker-sscs-anonymouscitizen
      - caseworker-sscs-callagent
      - caseworker-sscs-judge
      - caseworker-sscs-judge-salaried
      - caseworker-sscs-clerk
      - caseworker-sscs-dwpresponsewriter
      - caseworker-sscs-registrar
      - caseworker-sscs-superuser
      - caseworker-sscs-teamleader
      - caseworker-sscs-panelmember
      - caseworker-sscs-bulkscan
      - caseworker-sscs-pcqextractor
      - caseworker-sscs-hmrcresponsewriter
      - caseworker-wa-task-configuration
      - caseworker-ras-validation
      - GS_profile
elastic:
  enabled: true

# tya disabled by default due of requirements of additional topic subscriptions which is not possible currently configure and should be done manually
# if your PR requires tya-notif change enabled to true
# deploy to preview as usual
# and when go to azure portal and search for sscs-sb-preview
# click topics and select your PR topic
# click subscriptions and click add subscription button (+ subscription)
# into name field add name: sscs-tribunals-api-pr-##YOUR PR NUMBER ##-servicebus-tya (example: sscs-tribunals-api-pr-3290-servicebus-tya)
# click create
# azure steps should be repeated every time PR is undeployed from preview
sscs-tya-notif:
  enabled: true
  java:
    image: hmctspublic.azurecr.io/sscs/tya-notif:latest
    releaseNameOverride: ${SERVICE_NAME}-sscs-tya-notification
    readinessDelay: 45
    environment:
      CORE_CASE_DATA_API_URL: ${CORE_CASE_DATA_API_URL}
      AMQP_HOST: "sscs-sb-preview.servicebus.windows.net"
      AMQP_USERNAME: "RootManageSharedAccessKey"
      TOPIC_NAME: "${SERVICE_NAME}-servicebus-main-topic"
      SUBSCRIPTION_NAME: "${SERVICE_NAME}-servicebus-tya"
      JOB_SCHEDULER_DB_NAME: "sscsjobscheduler"
      JOB_SCHEDULER_DB_HOST: ${SERVICE_NAME}-postgresql
      JOB_SCHEDULER_DB_CONNECTION_OPTIONS: "?stringtype=unspecified&ssl=disable&gssEncMode=disable"
      JOB_SCHEDULER_DB_USERNAME: hmcts
      JOB_SCHEDULER_DB_PASSWORD: "${JOB_SCHEDULER:hmcts}"
      HOURS_START_TIME: 0
      HOURS_END_TIME: 23
      RUN_DB_MIGRATION_ON_STARTUP: true
      TEST_RECIPIENTS_POSTCODE: "*"
      POST_HEARINGS_FEATURE: true
      POST_HEARINGS_B_FEATURE: true
      DUMMY: true
    secrets:
      AMQP_PASSWORD:
        secretRef: sscs-sb-preview
        key: primaryKey
    keyVaults:
      sscs:
        secrets:
          - idam-api
          - idam-oauth-user
          - idam-redirect
          - idam-sscs-systemupdate-user
          - idam-sscs-systemupdate-password
          - sscs-email-mac-secret-text
          - idam-sscs-oauth2-client-secret
          - sscs-s2s-secret
          - s2s-micro
          - evidence-share-topic-shared-access-key
          - docmosis-api-key
          - notification-key
          - notification-test-key

#Enable for SYA
sscs-tribunals-frontend:
  enabled: true
  nodejs:
    memoryLimits: "2Gi"
    cpuLimits: 2000m
    image: hmctspublic.azurecr.io/sscs/tribunals-frontend:latest
    ingressHost: sya-${SERVICE_FQDN}
    environment:
      REDIS_URL: redis://${SERVICE_NAME}-redis-master
      APPINSIGHTS_ROLE_NAME: ${SERVICE_NAME}
      PCQ_URL: "https://pcq.aat.platform.hmcts.net"
      FT_ANTENNA_WEBCHAT: false
      FT_WELSH: true
      PCQ_ENABLED: true
      MULTIPLE_DRAFTS_ENABLED: true
      ALLOW_CONFIG_MUTATIONS: true
      TRIBUNALS_CASE_API_URL: http://${SERVICE_NAME}-java
      UPLOAD_EVIDENCE_URL: http://${SERVICE_NAME}/evidence/upload
      SERVICES_IDAM_LOGIN_URL: https://idam-web-public.aat.platform.hmcts.net/login
      SERVICES_IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      UV_THREADPOOL_SIZE: 64
    keyVaults:
      sscs:
        secrets:
          - idam-sscs-oauth2-client-secret
          - postcode-lookup-token
          - AppInsightsInstrumentationKey
          - pcq-token-key
          - sscs-redis-access-key
          - sscs-redis-connection-string

redis:
  enabled: true
  replica:
    replicaCount: 0
  cluster:
    enabled: false
    slaveCount: 0
  usePassword: false
  master:
    persistence:
      enabled: false

#Turning either hearings api (with either listener on) or cft hearing service on requires
#service bus to be turned on.
sscs-hearings-api:
  enabled: false
  java:
    image: "hmctspublic.azurecr.io/sscs/hearings-api:latest" #Change to pr if required
    releaseNameOverride: ${SERVICE_NAME}-sscs-hearings-api
    ingressHost: hearings-${SERVICE_FQDN}
    environment:
      ROOT_LOGGING_LEVEL: INFO
      SSCS_LOG_LEVEL: DEBUG #Switch to debug to see requests being sent.
      SERVICE_BUS_LOG_LEVEL: ERROR
      LOG_OUTPUT: single
      CREATE_CCD_ENDPOINT: false
      IDAM_S2S_URL: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
      CASEWORKER_REF_API_URL: "http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal"
      IDAM_API_URL: "https://idam-api.aat.platform.hmcts.net"
      CORE_CASE_DATA_API_URL: ${CORE_CASE_DATA_API_URL}
      COMMON_REF_API_URL: "http://rd-commondata-api-aat.service.core-compute-aat.internal"
      JUDICIAL_REF_API_URL: "http://rd-judicial-api-aat.service.core-compute-aat.internal"
      EXUI_API_URL: "https://${SERVICE_NAME}-xui"
      HMC_API_URL: "http://hmc-cft-hearing-service-aat.service.core-compute-aat.internal"
      #Messaging
      HMC_HEARINGS_LISTENING_ENABLED: true
      HMC_HEARINGS_TOPIC_NAME: "hmc-to-cft-aat"
      HMC_HEARINGS_TOPIC_SUBSCRIPTION_NAME: "hmc-to-sscs-subscription-pr-3575"
      TRIBUNALS_HEARINGS_LISTENING_ENABLED: true
      TRIBUNALS_EVENT_QUEUE_NAME: ${SERVICE_NAME}-servicebus-tribunals-to-hearing-api
      TRIBUNALS_EVENT_QUEUE_POLICY_NAME: RootManageSharedAccessKey
      TRIBUNALS_EVENT_QUEUE_NAMESPACE: sscs-sb-preview
      HMC_HEARINGS_TOPIC_NAMESPACE: hmc-servicebus-aat
      HMC_DEPLOYMENT_ID: deployment-${SERVICE_NAME}
      HMC_DEPLOYMENT_FILTER_ENABLED: true
      CORE_CASE_DATA_CASE_TYPE_ID: Benefit-${CHANGE_ID}
    secrets:
      TRIBUNALS_EVENT_QUEUE_ACCESS_KEY:
        secretRef: sscs-sb-preview
        key: primaryKey
    keyVaults:
      sscs:
        secrets:
          - name: hmc-servicebus-shared-access-key-tf
            alias: HMC_HEARINGS_TOPIC_ACCESS_KEY
          - name: sscs-hearing-manager-username
            alias: IDAM_SSCS_SYSTEMUPDATE_USER
          - name: sscs-hearing-manager-pass
            alias: IDAM_SSCS_SYSTEMUPDATE_PASSWORD
          - name: app-insights-connection-string
            alias: app-insights-connection-string
          - name: sscs-s2s-secret
            alias: IDAM_S2S_AUTH_TOTP_SECRET
          - name: idam-oauth-user
            alias: IDAM_OAUTH2_CLIENT_ID
          - name: idam-sscs-oauth2-client-secret
            alias: IDAM_OAUTH2_CLIENT_SECRET


#Enable for queues/topics
#If you need a subscription for a topic, topic name should be not longer than 10 characters
servicebus:
  enabled: true
  resourceGroup: sscs-aso-preview-rg
  sbNamespace: sscs-servicebus-preview
  #Each topic/queue matches up to one used in the config above
  setup:
    topics:
      - name: main-topic
        subscriptionNeeded: yes
    queues:
      - name: tribunals-to-hearing-api

